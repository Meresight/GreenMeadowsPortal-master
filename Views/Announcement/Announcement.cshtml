@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using GreenMeadowsPortal.ViewModels
@using GreenMeadowsPortal.Models
@model AnnouncementDetailsViewModel

@{
    ViewData["Title"] = "Announcement Details - Green Meadows Portal";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Green Meadows | @Model.Title</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/announcement-details.css">
</head>
<body>
    <div class="wrapper">
        <!-- Sidebar Navigation -->
        <nav id="sidebar" class="sidebar">
            <div class="sidebar-header">
                <h3>Green Meadows</h3>
                <div class="sidebar-logo">GM</div>
            </div>

            <div class="user-profile">
                <div class="user-avatar">
                    <img src="/images/default-avatar.png" alt="User Avatar" id="user-avatar">
                </div>
                <div class="user-info">
                    <h4 id="user-name">Loading...</h4>
                    <p id="user-role">Loading...</p>
                </div>
            </div>

            <ul class="sidebar-menu">
                <li><a href="/Dashboard" id="dashboard-link"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li class="active"><a asp-controller="Announcement" asp-action="Index"><i class="fas fa-bullhorn"></i> Announcements</a></li>
                <li><a asp-controller="Dashboard" asp-action="Billing"><i class="fas fa-file-invoice-dollar"></i> Billing</a></li>
                <li><a href="/Facilities"><i class="fas fa-swimming-pool"></i> Facilities</a></li>
                <li><a href="/ServiceRequests"><i class="fas fa-tools"></i> Service Requests</a></li>
                <li><a href="/Documents"><i class="fas fa-file-alt"></i> Documents</a></li>
                <li><a href="/Forum"><i class="fas fa-comments"></i> Community Forum</a></li>
                <li><a href="/Security"><i class="fas fa-shield-alt"></i> Security</a></li>
                <li><a href="/Events"><i class="fas fa-calendar-alt"></i> Events</a></li>
                <li><a href="/Feedback"><i class="fas fa-comment-dots"></i> Feedback</a></li>
                <li><a href="/Contacts"><i class="fas fa-address-book"></i> Contacts</a></li>
            </ul>

            <div class="sidebar-footer">
                <a href="/Settings"><i class="fas fa-cog"></i> Settings</a>
                <a asp-controller="Account" asp-action="Logout"><i class="fas fa-sign-out-alt"></i>Logout</a>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="content-area">
            <!-- Top Navigation -->
            <header class="top-navbar">
                <button id="sidebar-toggle" class="sidebar-toggle">
                    <i class="fas fa-bars"></i>
                </button>

                <div class="back-button">
                    <a asp-controller="Announcement" asp-action="Index">
                        <i class="fas fa-arrow-left"></i> Back to Announcements
                    </a>
                </div>

                <div class="navbar-right">
                    <div class="notification-bell">
                        <a asp-controller="Notification" asp-action="Index">
                            <i class="fas fa-bell"></i>
                            <span class="notification-count" id="notification-count">0</span>
                        </a>
                    </div>

                    <div class="user-dropdown">
                        <img src="/images/default-avatar.png" alt="User Avatar" id="nav-user-avatar">
                        <span id="nav-user-name">Loading...</span>
                        <i class="fas fa-chevron-down"></i>

                        <div class="dropdown-menu">
                            <a asp-controller="Account" asp-action="Profile"><i class="fas fa-user"></i> My Profile</a>
                            <a href="/Settings"><i class="fas fa-cog"></i> Settings</a>
                            <a asp-controller="Account" asp-action="Logout"><i class="fas fa-sign-out-alt"></i>Logout</a>
                        </div>
                    </div>
                </div>
            </header>

            <!-- Page Content -->
            <main class="main-content">
                <!-- Success Message -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                        <button class="close-alert"><i class="fas fa-times"></i></button>
                    </div>
                }

                <!-- Announcement Content -->
                <div class="announcement-container">
                    <div class="announcement-header">
                        <h1>@Model.Title</h1>

                        <div class="announcement-meta">
                            @if (Model.Priority == AnnouncementPriority.Urgent)
                            {
                                <span class="tag urgent">Urgent</span>
                            }
                            else if (Model.Priority == AnnouncementPriority.Important)
                            {
                                <span class="tag important">Important</span>
                            }
                            else
                            {
                                <span class="tag general">General</span>
                            }

                            @if (Model.Status == AnnouncementStatus.Draft)
                            {
                                <span class="tag draft">Draft</span>
                            }
                            else if (Model.PublishDate > DateTime.Now)
                            {
                                <span class="tag scheduled">Scheduled</span>
                            }
                            else if (Model.Status == AnnouncementStatus.Archived)
                            {
                                <span class="tag archived">Archived</span>
                            }

                            <span class="meta-item">
                                <i class="fas fa-user"></i> Posted by: @Model.AuthorName
                            </span>
                            <span class="meta-item">
                                <i class="fas fa-calendar"></i> Published: @Model.PublishDate?.ToString("MMMM dd, yyyy")
                            </span>
                            @if (Model.ExpirationDate.HasValue)
                            {
                                <span class="meta-item">
                                    <i class="fas fa-hourglass-end"></i> Expires: @Model.ExpirationDate.Value.ToString("MMMM dd, yyyy")
                                </span>
                            }
                        </div>
                    </div>

                    <div class="announcement-body">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <div class="announcement-image">
                                <img src="@Model.ImageUrl" alt="@Model.Title">
                            </div>
                        }

                        <div class="announcement-content">
                            @Html.Raw(Model.Content)
                        </div>

                        @if (!string.IsNullOrEmpty(Model.AttachmentUrl))
                        {
                            <div class="announcement-attachment">
                                <h3>Attachments</h3>
                                <a href="@Model.AttachmentUrl" class="attachment-link" target="_blank">
                                    <i class="fas fa-paperclip"></i>
                                    @System.IO.Path.GetFileName(Model.AttachmentUrl)
                                </a>
                            </div>
                        }
                    </div>

                    <div class="announcement-footer">
                        <div class="read-receipt">
                            <i class="fas fa-eye"></i> Read by @Model.ReadCount people

                            <form asp-action="MarkAsRead" asp-route-id="@Model.Id" method="post" class="read-form">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn read-btn">
                                    <i class="fas fa-check"></i> Mark as Read
                                </button>
                            </form>
                        </div>

                        <div class="announcement-actions" id="admin-actions">
                            <!-- Admin/Staff actions will be shown here based on user role -->
                        </div>
                    </div>
                </div>
            </main>

            <!-- Footer -->
            <footer class="main-footer">
                <div class="footer-content">
                    <p>&copy; @DateTime.Now.Year Green Meadows Subdivision. All rights reserved.</p>
                    <div class="footer-links">
                        <a href="/Privacy">Privacy Policy</a>
                        <a href="/Terms">Terms of Service</a>
                        <a href="/Contact">Contact Us</a>
                    </div>
                </div>
            </footer>
        </div>
    </div>

    <!-- JavaScript -->
    <script>
        // Variable to store current user data
        let currentUser = {
            id: '',
            name: '',
            firstName: '',
            role: '',
            avatar: '/images/default-avatar.png',
            notificationCount: 0
        };

        // Function to fetch current user data
        async function fetchCurrentUser() {
            try {
                const response = await fetch('/api/User/GetCurrentUser');
                if (response.ok) {
                    const data = await response.json();
                    currentUser = {
                        id: data.id,
                        name: data.fullName,
                        firstName: data.firstName,
                        role: data.role,
                        avatar: data.profileImageUrl || '/images/default-avatar.png',
                        notificationCount: data.notificationCount
                    };

                    // Update UI with user data
                    updateUserData();

                    // Show admin actions if necessary
                    if (currentUser.role === 'Admin' ||
                        (currentUser.role === 'Staff' && data.id === '@Model.AuthorId')) {
                        showAdminActions();
                    }
                }
            } catch (error) {
                console.error('Failed to fetch user data:', error);
            }
        }

        // Function to update UI with user data
        function updateUserData() {
            // Update sidebar user info
            document.getElementById('user-avatar').src = currentUser.avatar;
            document.getElementById('user-name').textContent = currentUser.firstName;
            document.getElementById('user-role').textContent = currentUser.role;

            // Update dashboard link based on role
            const dashboardLink = document.getElementById('dashboard-link');
            if (currentUser.role === 'Admin') {
                dashboardLink.href = '/Dashboard/AdminDashboard';
            } else if (currentUser.role === 'Staff') {
                dashboardLink.href = '/Dashboard/StaffDashboard';
            } else {
                dashboardLink.href = '/Dashboard/HomeownerDashboard';
            }

            // Update navbar user info
            document.getElementById('nav-user-avatar').src = currentUser.avatar;
            document.getElementById('nav-user-name').textContent = currentUser.firstName;
            document.getElementById('notification-count').textContent = currentUser.notificationCount;
        }

        // Function to show admin actions
        function showAdminActions() {
            const actionsContainer = document.getElementById('admin-actions');
            let actionsHtml = '';

            if (currentUser.role === 'Admin' || currentUser.role === 'Staff') {
                actionsHtml += `<a href="/Announcement/Edit/@Model.Id" class="btn primary-btn">
                                    <i class="fas fa-edit"></i> Edit
                                </a>`;
            }

            if (currentUser.role === 'Admin') {
                // Add admin-specific actions
                if ('@Model.Status' === '@AnnouncementStatus.Draft.ToString()') {
                    actionsHtml += `<form action="/Announcement/Publish/@Model.Id" method="post" class="inline-form">
        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn success-btn">
                                            <i class="fas fa-paper-plane"></i> Publish
                                        </button>
                                    </form>`;
                }

                actionsHtml += `<a href="/Announcement/ReadReceipts/@Model.Id" class="btn info-btn">
                                    <i class="fas fa-list"></i> View Read Receipts
                                </a>`;

                actionsHtml += `<a href="/Announcement/Delete/@Model.Id" class="btn danger-btn">
                                    <i class="fas fa-trash"></i> Delete
                                </a>`;
            }

            actionsContainer.innerHTML = actionsHtml;
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Fetch current user data
            fetchCurrentUser();

            // Close alert button
            var closeButtons = document.querySelectorAll('.close-alert');
            closeButtons.forEach(function(button) {
                button.addEventListener('click', function() {
                    var alert = this.parentElement;
                    alert.style.display = 'none';
                });
            });

            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function(alert) {
                    alert.style.display = 'none';
                });
            }, 5000);

            // User dropdown functionality
            var userDropdown = document.querySelector('.user-dropdown');
            if (userDropdown) {
                userDropdown.addEventListener('click', function(e) {
                    e.stopPropagation();
                    var dropdownMenu = this.querySelector('.dropdown-menu');
                    dropdownMenu.classList.toggle('show');
                });

                document.addEventListener('click', function(e) {
                    var dropdownMenu = document.querySelector('.dropdown-menu.show');
                    if (dropdownMenu && !dropdownMenu.parentElement.contains(e.target)) {
                        dropdownMenu.classList.remove('show');
                    }
                });
            }

            // Mobile sidebar toggle
            var sidebarToggle = document.getElementById('sidebar-toggle');
            var sidebar = document.getElementById('sidebar');
            if (sidebarToggle && sidebar) {
                sidebarToggle.addEventListener('click', function() {
                    sidebar.classList.toggle('active');
                });
            }
        });
    </script>
</body>
</html>